/*
 * News Feed
 *
 * news feed api
 *
 * API version: 1.0.0
 * Contact: media@glennengstrand.info
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package newsfeedserver

import (
	"net/http"
	"strings"
	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	http.Redirect(w, r, "http://glennengstrand.info", http.StatusSeeOther)
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/",
		Index,
	},

	Route{
		"AddFriend",
		strings.ToUpper("Post"),
		"/participant/{id}/friends",
		AddFriend,
	},

	Route{
		"GetFriend",
		strings.ToUpper("Get"),
		"/participant/{id}/friends",
		GetFriend,
	},

	Route{
		"GetInbound",
		strings.ToUpper("Get"),
		"/participant/{id}/inbound",
		GetInbound,
	},

	Route{
		"AddOutbound",
		strings.ToUpper("Post"),
		"/participant/{id}/outbound",
		AddOutbound,
	},

	Route{
		"GetOutbound",
		strings.ToUpper("Get"),
		"/participant/{id}/outbound",
		GetOutbound,
	},

	Route{
		"SearchOutbound",
		strings.ToUpper("Get"),
		"/outbound",
		SearchOutbound,
	},

	Route{
		"AddParticipant",
		strings.ToUpper("Post"),
		"/participant",
		AddParticipant,
	},

	Route{
		"GetParticipant",
		strings.ToUpper("Get"),
		"/participant/{id}",
		GetParticipant,
	},
}
