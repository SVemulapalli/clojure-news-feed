# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class Friend(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, id: int=None, _from: int=None, to: int=None):
        """
        Friend - a model defined in Swagger

        :param id: The id of this Friend.
        :type id: int
        :param _from: The _from of this Friend.
        :type _from: int
        :param to: The to of this Friend.
        :type to: int
        """
        self.swagger_types = {
            'id': int,
            '_from': int,
            'to': int
        }

        self.attribute_map = {
            'id': 'id',
            '_from': 'from',
            'to': 'to'
        }

        self._id = id
        self.__from = _from
        self._to = to

    @classmethod
    def from_dict(cls, dikt) -> 'Friend':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The friend of this Friend.
        :rtype: Friend
        """
        return deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """
        Gets the id of this Friend.

        :return: The id of this Friend.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """
        Sets the id of this Friend.

        :param id: The id of this Friend.
        :type id: int
        """

        self._id = id

    @property
    def _from(self) -> int:
        """
        Gets the _from of this Friend.

        :return: The _from of this Friend.
        :rtype: int
        """
        return self.__from

    @_from.setter
    def _from(self, _from: int):
        """
        Sets the _from of this Friend.

        :param _from: The _from of this Friend.
        :type _from: int
        """

        self.__from = _from

    @property
    def to(self) -> int:
        """
        Gets the to of this Friend.

        :return: The to of this Friend.
        :rtype: int
        """
        return self._to

    @to.setter
    def to(self, to: int):
        """
        Sets the to of this Friend.

        :param to: The to of this Friend.
        :type to: int
        """

        self._to = to

